* Big Changes
** Construct course relatedness graph using Bayes' theorem.
*** TODO In relatedness graph, add relatedness as a column.
*** TODO Copy documentation into Haskell files
*** Make program faster
**** Instead of storing one big featurePriors, store a different one for each entry so lookup will be much faster. Wait, this isn't possible because the map has to be over everything.
**** Use hash tables instead of trees
**** Inline
*** TODO How to compute P(F|R) and P(~F|R)?
*** TODO Make features use word stems instead of words (use NLP.Stemmer)
*** TODO The relatedness graph DB may be inefficient since it has to iterate over the whole table to find courses related to some course.
* Small Changes
** TODO If a query returns multiple results, perform a relatedness search on each result instead of just the first.
** TODO Put prerequisites into DB (use extractPrereqs)
** TODO Change list of instructors in the course info db from a string to an actual list
** TODO For courses where the title lists alternative codes, treat these codes as a separate value in the table and not as part of the title.
* Bugs
** TODO Sanitized queries (in search.py:search()) don't work.
* Cleanup
** Look for TODOs in files.
** Use Notes.md to create a nice writeup.

** TODO If time permits, implement spellchecker using 'editdistance' (using DP counts as AI??)
** TODO In write-up/discussion experiment with reduction of features (i.e. use only 'code'/'instructor' features) to discuss how adding features improves quality of results.
** TODO Implement improved 'predictive' search given a user's history of past searches

